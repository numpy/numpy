# intentional type-check-only deviations from runtime
numpy\._typing.*
numpy\.polynomial\._polytypes
numpy\.typing\.mypy_plugin\..*

# internal testing code
numpy\.conftest.*
numpy\.random\._generator\.__test__
numpy(\.\w+)?\.tests.*

# system-dependent extended precision types
numpy(\..+)?\.float(96|128)
numpy(\..+)?\.complex(192|256)

# system-dependent SIMD constants
numpy\._core\._simd\.\w+

# these are always either float96/complex192 or float128/complex256
numpy\.__all__
numpy\._?core\.__all__
numpy\._?core\.numeric\.__all__
numpy\._?core\.numerictypes\.__all__
numpy\.matlib\.__all__

# requires numpy/_core/code_generators to be on the PYTHONPATH when running stubtest
numpy\._core\.cversions

# raises SystemExit on import
numpy\.f2py\.__main__

# inexpressible: the `dtype.type` class-attribute is `None` unless instantiated
numpy(\..+)?\.dtype\.type

# distutils
numpy\.distutils.*

# import errors
numpy\._build_utils.*
numpy\._core\.code_generators.*
numpy\._core\.include\.numpy\.libdivide
numpy\._core\.src.*
numpy\._pyinstaller.*
numpy\.fft\.pocketfft
numpy\.random\._examples\..*
numpy\.random\.include
numpy\.random\.src.*

# known minor deviations from runtime
numpy\.(\w+\.)*integer\.__index__
numpy\.(\w+\.)*integer\.bit_count
numpy\.(\w+\.)*floating\.as_integer_ratio
numpy\.(\w+\.)*floating\.is_integer
numpy\.(\w+\.)*complexfloating\.__complex__

# intentionally missing deprecated module stubs
numpy\.core\._dtype
numpy\.core\._dtype_ctypes
numpy\.core\._internal
numpy\.core\._multiarray_umath.*
numpy\.core\.arrayprint.*
numpy\.core\.defchararray.*
numpy\.core\.einsumfunc.*
numpy\.core\.fromnumeric.*
numpy\.core\.function_base.*
numpy\.core\.getlimits.*
numpy\.core\.multiarray.*
numpy\.core\.numeric.*
numpy\.core\.overrides
numpy\.core\.records.*
numpy\.core\.shape_base.*
numpy\.core\.umath.*

# ufuncs
numpy\.(\w+\.)*abs
numpy\.(\w+\.)*absolute
numpy\.(\w+\.)*acos
numpy\.(\w+\.)*acosh
numpy\.(\w+\.)*add
numpy\.(\w+\.)*arccos
numpy\.(\w+\.)*arccosh
numpy\.(\w+\.)*arcsin
numpy\.(\w+\.)*arcsinh
numpy\.(\w+\.)*arctan
numpy\.(\w+\.)*arctan2
numpy\.(\w+\.)*arctanh
numpy\.(\w+\.)*asin
numpy\.(\w+\.)*asinh
numpy\.(\w+\.)*atan
numpy\.(\w+\.)*atan2
numpy\.(\w+\.)*atanh
numpy\.(\w+\.)*bitwise_and
numpy\.(\w+\.)*bitwise_count
numpy\.(\w+\.)*bitwise_invert
numpy\.(\w+\.)*bitwise_left_shift
numpy\.(\w+\.)*bitwise_not
numpy\.(\w+\.)*bitwise_or
numpy\.(\w+\.)*bitwise_right_shift
numpy\.(\w+\.)*bitwise_xor
numpy\.(\w+\.)*cbrt
numpy\.(\w+\.)*ceil
numpy\.(\w+\.)*conj
numpy\.(\w+\.)*conjugate
numpy\.(\w+\.)*copysign
numpy\.(\w+\.)*cos
numpy\.(\w+\.)*cosh
numpy\.(\w+\.)*deg2rad
numpy\.(\w+\.)*degrees
numpy\.(\w+\.)*divide
numpy\.(\w+\.)*divmod
numpy\.(\w+\.)*equal
numpy\.(\w+\.)*exp
numpy\.(\w+\.)*exp2
numpy\.(\w+\.)*expm1
numpy\.(\w+\.)*fabs
numpy\.(\w+\.)*float_power
numpy\.(\w+\.)*floor
numpy\.(\w+\.)*floor_divide
numpy\.(\w+\.)*fmax
numpy\.(\w+\.)*fmin
numpy\.(\w+\.)*fmod
numpy\.(\w+\.)*frexp
numpy\.(\w+\.)*gcd
numpy\.(\w+\.)*greater
numpy\.(\w+\.)*greater_equal
numpy\.(\w+\.)*heaviside
numpy\.(\w+\.)*hypot
numpy\.(\w+\.)*invert
numpy\.(\w+\.)*isfinite
numpy\.(\w+\.)*isinf
numpy\.(\w+\.)*isnan
numpy\.(\w+\.)*isnat
numpy\.(\w+\.)*lcm
numpy\.(\w+\.)*ldexp
numpy\.(\w+\.)*left_shift
numpy\.(\w+\.)*less
numpy\.(\w+\.)*less_equal
numpy\.(\w+\.)*log
numpy\.(\w+\.)*log10
numpy\.(\w+\.)*log1p
numpy\.(\w+\.)*log2
numpy\.(\w+\.)*logaddexp
numpy\.(\w+\.)*logaddexp2
numpy\.(\w+\.)*logical_and
numpy\.(\w+\.)*logical_not
numpy\.(\w+\.)*logical_or
numpy\.(\w+\.)*logical_xor
numpy\.(\w+\.)*matmul
numpy\.(\w+\.)*matvec
numpy\.(\w+\.)*maximum
numpy\.(\w+\.)*minimum
numpy\.(\w+\.)*mod
numpy\.(\w+\.)*modf
numpy\.(\w+\.)*multiply
numpy\.(\w+\.)*negative
numpy\.(\w+\.)*nextafter
numpy\.(\w+\.)*not_equal
numpy\.(\w+\.)*positive
numpy\.(\w+\.)*pow
numpy\.(\w+\.)*power
numpy\.(\w+\.)*rad2deg
numpy\.(\w+\.)*radians
numpy\.(\w+\.)*reciprocal
numpy\.(\w+\.)*remainder
numpy\.(\w+\.)*right_shift
numpy\.(\w+\.)*rint
numpy\.(\w+\.)*sign
numpy\.(\w+\.)*signbit
numpy\.(\w+\.)*sin
numpy\.(\w+\.)*sinh
numpy\.(\w+\.)*spacing
numpy\.(\w+\.)*sqrt
numpy\.(\w+\.)*square
numpy\.(\w+\.)*subtract
numpy\.(\w+\.)*tan
numpy\.(\w+\.)*tanh
numpy\.(\w+\.)*true_divide
numpy\.(\w+\.)*trunc
numpy\.(\w+\.)*vecdot
numpy\.(\w+\.)*vecmat
numpy\.(\w+\.)*isalnum
numpy\.(\w+\.)*isalpha
numpy\.(\w+\.)*isdecimal
numpy\.(\w+\.)*isdigit
numpy\.(\w+\.)*islower
numpy\.(\w+\.)*isnumeric
numpy\.(\w+\.)*isspace
numpy\.(\w+\.)*istitle
numpy\.(\w+\.)*isupper
numpy\.(\w+\.)*str_len
numpy\._core\._methods\.umr_bitwise_count
numpy\._core\._methods\.umr_bitwise_count
numpy\.linalg\._umath_linalg\.qr_complete
numpy\.linalg\._umath_linalg\.qr_reduced
numpy\.linalg\._umath_linalg\.solve
numpy\.linalg\._umath_linalg\.solve1

# ma.core._frommethod callables
numpy\.ma\.(core\.)?argmax
numpy\.ma\.(core\.)?argmin
numpy\.ma\.(core\.)?count
